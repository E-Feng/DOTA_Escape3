"DOTAAbilities"
{
  "example_ability"
	{
		"ID"							"80852"
		"BaseClass"						"ability_datadriven"
		"AbilityTextureName"			"holdout_blade_fury"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_CHANNELLED"
	//	Most used Ability Behaviors:
	//	DOTA_ABILITY_BEHAVIOR_HIDDEN: This ability can be owned by a unit but can't be casted and wont show up on the HUD.
	//	DOTA_ABILITY_BEHAVIOR_PASSIVE: Can't be casted like above but this one shows up on the ability HUD
	//	DOTA_ABILITY_BEHAVIOR_NO_TARGET: Doesn't need a target to be cast, ability fires off as soon as the button is pressed
	//	DOTA_ABILITY_BEHAVIOR_UNIT_TARGET: Ability needs a target to be casted on.
	//	DOTA_ABILITY_BEHAVIOR_POINT: Ability can be cast anywhere the mouse cursor is (If a unit is clicked it will just be cast where the unit was standing)
	//	DOTA_ABILITY_BEHAVIOR_AOE: This ability draws a radius where the ability will have effect. YOU STILL NEED A TARGETTING BEHAVIOR LIKE DOTA_ABILITY_BEHAVIOR_POINT FOR THIS TO WORK.
	//	DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE: This ability probably can be casted or have a casting scheme but cannot be learned (these are usually abilities that are temporary)
	//	DOTA_ABILITY_BEHAVIOR_CHANNELLED: This abillity is channelled. If the user moves or is silenced the ability is interrupted.
	//	DOTA_ABILITY_BEHAVIOR_TOGGLE
	//	DOTA_ABILITY_BEHAVIOR_AUTOCAST
	//	DOTA_ABILITY_BEHAVIOR_DIRECTIONAL: Requires direction from the hero. Example: Mirana Arrow or Pudge Hook.
	//	DOTA_ABILITY_BEHAVIOR_IMMEDIATE: Can be used with DOTA_ABILITY_BEHAVIOR_NO_TARGET and AbilityCastPoint 0 for instant cast while moving.
	//	DOTA_ABILITY_BEHAVIOR_ATTACK: For attack modifiers that are not passive.
	//	DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES: Ability cannot be used while rooted.
	//	DOTA_ABILITY_BEHAVIOR_UNRESTRICTED: Ability can be when commands are restricted.
	//	DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE: Can be executed while stunned, casting, or force-attacking. Only applicable to toggled abilities.
	//	DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL: Ability will not cancel channels if used.
		
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_ENEMY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityUnitTargetFlags"		"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
		"AbilityUnitDamageType"			"DAMAGE_TYPE_PURE"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_YES"
		"SpellDispellableType"			"SPELL_DISPELLABLE_YES"

		"AbilityCastPoint"				"0.3"
		"AbilityCooldown"				"10.0"
		"AbilityChannelTime"			"2.0 1.8 1.6 1.5"
		
		"AbilityCastAnimation"			"ACT_DOTA_DISABLED"
		"AbilityManaCost"				"300"
		"AbilityProcsMagicStick"		"1"

		"precache"
		{
			"particle"          "particles/econ/generic/generic_aoe_explosion_sphere_1/generic_aoe_explosion_sphere_1.vpcf"
			"soundfile"         "soundevents/game_sounds_heroes/game_sounds_gyrocopter.vsndevts"
		}

		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"Target"    	"CASTER"
				"ModifierName"  "modifier_channel_start"
			}
			"FireSound"
			{
				"EffectName"    "Hero_Gyrocopter.CallDown.Fire"
				"Target"      	"CASTER"
			}
		}

		"OnChannelSucceeded"
		{
			"RemoveModifier"
			{
				"Target"        	"CASTER"
				"ModifierName"      "modifier_channel_start"
			}

			"AttachEffect"
			{
				"EffectName"      		"particles/econ/generic/generic_aoe_explosion_sphere_1/generic_aoe_explosion_sphere_1.vpcf"
				"EffectAttachType"    	"follow_origin"
				"EffectRadius"      		"%radius"
				"EffectDurationScale" 		"1"
				"EffectLifeDurationScale" 	"1"
				"EffectColorA"      		"255 0 0"
				"EffectColorB"      		"255 0 0"
				"Target"      				"CASTER"
			}

            "Damage"
			{
				"Type"          "DAMAGE_TYPE_PURE"
				"Damage"        "%damage"
				"Target"
				{
					"Center"		"CASTER"
					"Radius"		"%radius"
					"Teams"			"DOTA_UNIT_TARGET_TEAM_ENEMY"
					"Types"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
					"Flags"			"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
				}
			}

			"Knockback"
			{
				"Center"  "CASTER"
				"Target"
				{
					"Center"  	"CASTER"
					"Radius"  	"%radius"
					"Teams"   	"DOTA_UNIT_TARGET_TEAM_ENEMY"
				}
				"Duration"  "%duration"
				"Distance"  "%distance"
				"Height"  	"%height"
			}

      		"FireSound"
			{
				"EffectName"    "Hero_Gyrocopter.CallDown.Damage"
				"Target"      	"CASTER"
			}
		}

    	"OnChannelFinish"
		{
			"RemoveModifier"
			{
				"Target"        	"CASTER"
				"ModifierName"      "modifier_channel_start"
			}
		}

        "OnChannelInterrupted"
		{
			"RemoveModifier"
			{
				"Target"    		"CASTER"
				"ModifierName"  	"modifier_channel_start"
			}
		}

		"Modifiers"
		{
			"modifier_channel_start"
			{
				"IsHidden"			"1"
				"IsBuff"			"1"
				"IsDebuff"			"0"
				"IsStunDebuff"		"0"
				"IsPurgable"		"1"
            
				"EffectName"    	"particles/test_particle/channel_field_2.vpcf"//"gyro_calldown_marker_c"//"gyrocopter_call_down"
				"EffectAttachType"  "follow_origin"
                "EffectRadius"      "%radius"
				"EffectColorA"      "255 0 0"
				"EffectColorB"      "255 0 0"
			}
		}

		"AbilitySpecial"
		{
			"01"
			{
				"var_type"						"FIELD_INTEGER"
				"duration"						"1"
			}
		  
			"02"
			{
				"var_type"						"FIELD_INTEGER"
				"damage"						"400 600 800 1000"
				"CalculateSpellDamageTooltip"	"1"
			}
		  
			"03"
			{
				"var_type"						"FIELD_INTEGER"
				"radius"						"550 550 600 650"
				"LinkedSpecialBonus"			"special_bonus_unique_hero_name"
			}
		  
			"04"
			{
				"var_type"						"FIELD_INTEGER"
				"distance"						"400 500 600 700"
			}
		  
			"05"
			{
				"var_type"						"FIELD_INTEGER"
				"height"						"100 200 300 400"
			}
		}
	}
}
